name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger the pipeline when changes are pushed to the 'main' branch.
  pull_request:
    branches:
      - master  # Trigger the pipeline when a pull request is made to the 'main' branch.

jobs:
  build:
    runs-on: ubuntu-latest  # Run the pipeline on the latest Ubuntu runner.

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # This step checks out the code from your repository.

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3  # Use this action to set up Node.js.
        with:
          node-version: '18'  # Specify Node.js version.

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install  # This installs the required Node.js dependencies.

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-microservice:${{ github.sha }} .  # Build the Docker image, tagged with the commit hash.
      
      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin  # Log in to Docker Hub using secrets.

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-microservice:${{ github.sha }}  # Push the Docker image to Docker Hub.

      # Step 7: Deploy to AWS ECS
      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster auth-microservice-cluster --service auth-microservice --force-new-deployment  # Update the ECS service to deploy the latest Docker image.
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use GitHub secrets for AWS credentials.
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use GitHub secrets for AWS credentials.
          AWS_REGION: us-east-1  # Specify the AWS region.
